<% include partials/header %>
<div class='container'>
    <div id='chatapp'>
        Loading...
    </div>
</div>

<script src='/socket.io/socket.io.js'></script>
<script type='text/babel'>
class Main extends React.Component{
    constructor(props){
        
        super(props);
        
        
        
        this.state=({chatLog:[{'user':'PANDIT','message':'Choose user in your left-hand side list'}],selectedChat:'',chatList:[]});
        
        
        
        var socket = io.connect('/');
        
        socket.on('message',this.updateChatlog.bind(this));
        
    }
    componentWillMount(){
        // Load Chat List
        $.ajax({
          url: '/chat/api/chatlist',
          dataType: 'json',
          type: 'GET',
          success: function(data) {
            this.setState({chatList: data});
          }.bind(this),
          error: function(xhr, status, err) {
            if(err) throw err;
          }.bind(this)
        });
        
        
        var init = this.props.init;
        if(init!=''){
            this.changeSelected(init);
        }

    }
    updateChatlog(data){
        if(data.roomId==this.state.selectedChat){
        var oldMessage = this.state.chatLog;
        oldMessage.push(data);
        this.setState({chatLog:oldMessage});
        }
    }
    updateChatLocal(data){
        var oldMessage = this.state.chatLog;
        oldMessage.push(data);
        this.setState({chatLog:oldMessage});
        }
    }
    changeSelected(x){
        this.setState({selectedChat:x});
    
    // Load Chat Log
        $.ajax({
          url: '/chat/api/chatlog?roomid='+x,
          dataType: 'json',
          type: 'GET',
          success: function(data) {
            this.setState({chatLog: data.chatLog});
          }.bind(this),
          error: function(xhr, status, err) {
            if(err) throw err;
          }.bind(this)
        });
    }
    

    render(){
        return(<div className='row'>
            <div className='col-md-3'>
            <ListUser chatlist={this.state.chatList} select={this.changeSelected.bind(this)} roomid={this.state.selectedChat}/>
            </div>
            <div className='col-md-9'>
            <ChatApp chatLog={this.state.chatLog} id={this.props.id} roomid={this.state.selectedChat} name={this.props.name} updateChatLocal={this.updateChatLocal.bind(this)}/>
            </div>
        </div>);
    }
}

class ListUser extends React.Component{
    constructor(props){
        super(props);
        
    }
    handleSelect(id){
        this.props.select(id);
    }
    render(){
        var chatList = this.props.chatlist;
        var temp =[];
        chatList.forEach(function(list){
            var nameOfClass='list-group-item browse';
            if(list._id==this.props.roomid){
                nameOfClass=nameOfClass+" list-group-item-info";
            }
            temp.push(<li className={nameOfClass} key={list._id} onClick={this.handleSelect.bind(this,list._id)}>{list.name}</li>);
        },this);

        return(<ul className="list-group">
          <li className="list-group-item active">You're talking to</li>
          {temp}
        </ul>);
    }
}

class ChatApp extends React.Component{
    constructor(props){
        super(props);
    }
    render(){
        return (<div className='well clearfix'>
        <ChatWindow chatLog={this.props.chatLog} name={this.props.name}/>
        <ChatBox id={this.props.id} roomid={this.props.roomid} name={this.props.name} updateChatLocal={this.props.updateChatLocal}/>
        </div>);
    };
}

class ChatWindow extends React.Component{
    constructor(props){
        super(props);
    }
    render(){
        var temp=[];
        this.props.chatLog.forEach(function(message,i){
            if(message.sender==this.props.name){
                temp.push(<p key={i} className='rightalign'><strong>{message.sender} says: </strong>{message.message}</p>);
            }else{
            temp.push(<p key={i}><strong>{message.sender} says: </strong>{message.message}</p>);
            }
        },this)
        return (<div id='chatmessage' className='overf'>
                {temp}
        </div>);
    };
}

class ChatBox extends React.Component{
    constructor(props){
        super(props);
    }
    handleSubmit(e){
        e.preventDefault();
        this.props.updateChatLocal({
            sender: this.props.name,
            message:this.refs.message.value,
            roomId:this.props.roomid
        });
        if(this.props.roomid){
        var socket = io.connect('/');
        socket.send({
            sender: this.props.name,
            message:this.refs.message.value,
            roomId:this.props.roomid
        });
        this.refs.message.value='';
        }
    }
    
    render(){
        return (<form onSubmit={this.handleSubmit.bind(this)}>
                    <div className='form-group'>
                        <div className='form-group'>
                            <input type='text' name='message' className='form-control chat-input' placeholder="Your message here..." ref='message'/> 
                        </div>
                        <button type='submit' className='btn btn-primary'>Send</button>
                    </div>
                </form>);
    }
}

ReactDOM.render(<Main id='<%= currentUser._id%>' init="<%= init ? init : '' %>" name='<%= currentUser.fullname ? currentUser.fullname : currentUser.facebook.name %>'/> ,document.querySelector('#chatapp'));
</script>
<% include partials/footer %>