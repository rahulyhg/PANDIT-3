<% include ../partials/header %>
<div class='container'>
    <div id='browse'>
        Loading...
    </div>
</div>


<script type='text/babel'>

class Main extends React.Component{
    constructor(props){
        super(props);
        
        this.state={data:[],
        classSelected:'all',
        lower:0,
        upper:5000,
        gender:'all',
        location:['bts','mrt','siam','silom','home'],
        date:['mon','tue','wed','thu','fri','sat','sun']
        };
    }
    componentWillMount(){
        $.ajax({
          url: '/course/api?subject='+this.props.subject,
          dataType: 'json',
          type: 'GET',
          success: function(data) {
            this.setState({data: data});
          }.bind(this),
          error: function(xhr, status, err) {
            console.error('/course/api?subject'+this.props.subject, status, err.toString());
          }.bind(this)
        });
    }
    changeSort(x){
        var sortType={
            recent:function(a,b){
                if(a.created>b.created) return -1;
                if(a.created<b.created) return +1;
                if(a.created==b.created) return 0;
            },
            rating:function(a,b){
                if(a.rating>b.rating) return -1;
                if(b.rating>a.rating) return +1;
                if(b.rating==a.rating) return 0;
            },
            review:function(a,b){
                if(a.comment.length>b.comment.length) return -1;
                if(a.comment.length<b.comment.length) return +1;
                if(a.comment.length==b.comment.length) return 0;
            }
        }
        switch(x){
            case 'recent': this.setState({data:this.state.data.sort(sortType.recent)}); break;
            case 'rating': this.setState({data:this.state.data.sort(sortType.rating)}); break;
            case 'review': this.setState({data:this.state.data.sort(sortType.review)}); break;
        }
    }
    changeSubject(subject){
        if(subject=='all'){
            window.location='/course';
            return;
        }
        window.location='/course?subject='+subject;
    }
    changeClass(classPass){
        this.setState({classSelected:classPass});
    }
    changeLowerPrice(priceLower){
        this.setState({lower:priceLower});
    }
    changeHigherPrice(priceHigher){
        this.setState({upper:priceHigher});
    }
    changeGender(gender){
        this.setState({gender:gender});
    }
    changeLocation(location){
        if(this.state.location.indexOf(location)!=-1){
            var temp =this.state.location.filter(function(loc){return loc!=location});
            this.setState({location:temp});
        }else{
            this.setState({location:this.state.location.concat([location])});
        }
    }
    changeDate(date){
        if(this.state.date.indexOf(date)!=-1){
            let temp =this.state.date.filter(function(day){return day!=date});
            this.setState({date:temp});
        }else{
            this.setState({date:this.state.date.concat([date])});
        }
    }
    render(){
        return (<div className='row'>
                    <div className='col-md-3'>
                        <FilterTable onSubjectChange={this.changeSubject.bind(this)}
                        subject={this.props.subject}
                        onClassChange={this.changeClass.bind(this)}
                        lower={this.state.lower}
                        upper={this.state.upper}
                        onLowerPrice={this.changeLowerPrice.bind(this)}
                        onHigherPrice={this.changeHigherPrice.bind(this)}
                        gender={this.state.gender}
                        onGenderChange={this.changeGender.bind(this)}
                        location={this.state.location}
                        onLocationChange={this.changeLocation.bind(this)}
                        date={this.state.date}
                        onDateChange={this.changeDate.bind(this)}
                        />
                    </div>
                    <div className='col-md-9'>
                        <Sort onSortTypeChange={this.changeSort.bind(this)}/>
                        <CourseList courseAll={this.state.data} 
                        classSelected={this.state.classSelected}
                        lower={this.state.lower}
                        upper={this.state.upper}
                        gender={this.state.gender}
                        location={this.state.location}
                        date={this.state.date}
                        />
                    </div>
                </div>);
    }
}

class FilterTable extends React.Component{
    constructor(props){
        super(props);
    };
    handleSubject(e){
        this.props.onSubjectChange(e.target.value);
    }
    handleClass(e){
        this.props.onClassChange(e.target.value);
    }
    handleLower(e){
        this.props.onLowerPrice(e.target.value);
    }
    handleHigher(e){
        this.props.onHigherPrice(e.target.value);
    }
    handleGenderChange(e){
        this.props.onGenderChange(e.target.value);
    }
    handleLocation(e){
        this.props.onLocationChange(e.target.value);
    }
    handleDate(e){
        this.props.onDateChange(e.target.value);
    }
    render(){
        return (<ul className="list-group">
                <li className="list-group-item active">
                    Filter <span className="glyphicon glyphicon-menu-down pull-right" aria-hidden="true" />
                </li>
                <li className="list-group-item">
                    <p>
                        <strong>Subject:</strong> 
                        <select name='subject' value={this.props.subject} onChange={this.handleSubject.bind(this)}>
                          <option value='all'>All</option>
                          <option value='gat'>Gat</option>
                          <option value='art'>Art</option>
                          <option value='bio'>Biology</option>
                          <option value='chemistry'>Chemistry</option>
                          <option value='chinese'>Chinese</option>
                          <option value='computer'>Computer</option>
                          <option value='english'>English</option>
                        </select>
                    </p>
                    <p>
                        <strong>Class:</strong> 
                        <select name='class' onChange={this.handleClass.bind(this)}>
                          <option value='all'>All</option>
                          <option value='kindergarden'>Kindergarden</option>
                          <option value='primary'>Primary School</option>
                          <option value='secondary'>Secondary School</option>
                          <option value='university'>University</option>
                          <option value='activities'>Activities</option>
                        </select>
                    </p>
                    <p>
                      <strong>Price:</strong>  <input type='number' value={this.props.lower} size='5' onChange={this.handleLower.bind(this)}/> - <input type='number' value={this.props.upper} size='5' onChange={this.handleHigher.bind(this)}/>
                    </p>
                    <p>
                      <strong>Date:</strong><br /> <input type='checkbox' value='mon' checked={this.props.date.indexOf('mon')!=-1} onChange={this.handleDate.bind(this)}/> Monday <input type='checkbox' value='tue' checked={this.props.date.indexOf('tue')!=-1} onChange={this.handleDate.bind(this)}/> Tuesday 
                      <br /><input type='checkbox' value='wed' checked={this.props.date.indexOf('wed')!=-1} onChange={this.handleDate.bind(this)}/> Wednesday <input type='checkbox' value='thu' checked={this.props.date.indexOf('thu')!=-1} onChange={this.handleDate.bind(this)}/> Thrusday 
                      <br /><input type='checkbox' value='fri' checked={this.props.date.indexOf('fri')!=-1} onChange={this.handleDate.bind(this)}/> Friday <input type='checkbox' value='sat' checked={this.props.date.indexOf('sat')!=-1} onChange={this.handleDate.bind(this)}/> Saturday 
                      <br /><input type='checkbox' value='sun' checked={this.props.date.indexOf('sun')!=-1} onChange={this.handleDate.bind(this)}/> Sunday 
                    </p>
                    <p>
                      <strong>Gender:</strong>
                      <br /><input type='radio' name='gender' value='all' checked={this.props.gender=='all'} onChange={this.handleGenderChange.bind(this)}/> All <input type='radio' name='gender' value='male' checked={this.props.gender=='male'} onChange={this.handleGenderChange.bind(this)}/> Male <input type='radio' name='gender' value='female' checked={this.props.gender=='female'} onChange={this.handleGenderChange.bind(this)}/> Female 
                    </p>
                    <p>
                      <strong>Location:</strong>
                      <br /><input type='checkbox' value='bts' checked={this.props.location.indexOf('bts')!=-1} onChange={this.handleLocation.bind(this)}/> BTS Station
                      <br /><input type='checkbox' value='mrt' checked={this.props.location.indexOf('mrt')!=-1} onChange={this.handleLocation.bind(this)}/> MRT Station
                      <br /><input type='checkbox' value='siam' checked={this.props.location.indexOf('siam')!=-1} onChange={this.handleLocation.bind(this)}/> Siam
                      <br /><input type='checkbox' value='silom' checked={this.props.location.indexOf('silom')!=-1} onChange={this.handleLocation.bind(this)}/> Silom
                      <br /><input type='checkbox' value='home' checked={this.props.location.indexOf('home')!=-1} onChange={this.handleLocation.bind(this)}/> Home Tutor
                    </p>
                </li>
            </ul>);
    }
}

class Sort extends React.Component{
    constructor(props){
        super(props);
    }
    handleChange(e){
        this.props.onSortTypeChange(e.target.value);
    }
    render(){
        return (<ul className="list-group">
                    <li className="list-group-item active">
                        <h4 className="list-group-item-heading">Choose your tutor</h4>
                        <p className="list-group-item-text">
                            Sort by:
                            <select className='form-control' onChange={this.handleChange.bind(this)}> 
                                <option value='recent'>Recent</option>
                                <option value='rating'>Rating</option>
                                <option value='review'>Reviews</option>
                            </select>
                        </p>
                    </li>
                </ul>);
    }
}


class CourseList extends React.Component{
    constructor(props){
        super(props);
    }

    render(){
        var temp=[];
        var courseAll = this.props.courseAll;
        var classAll =false;
            if (this.props.classSelected=='all'){
                classAll=true;
            }
        var classSpecific = this.props.classSelected;
        
        var lowerPrice = this.props.lower;
        var upperPrice = this.props.upper;
        
        var genderAll=false;
            if(this.props.gender=='all'){
                genderAll=true;
            }
        var genderSpecific = this.props.gender;
        
        var location=this.props.location;
        
        var date=this.props.date;
        
        courseAll.forEach(function(course){
            var pic ="";
            if(course.tutor.id.profilepic){
                pic='/uploads/'+course.tutor.id.profilepic;
            }else if(course.tutor.id.facebook.profilepic){
                pic=course.tutor.id.facebook.profilepic;
            }else{
                pic='/uploads/kitten.jpg';
            }
            
            var loc=false;
            course.location.forEach(function(x){
                if (location.indexOf(x)!=-1){
                    loc=true;
                }
            })
            
            var day=false;
            course.date.forEach(function(x){
                if (date.indexOf(x)!=-1){
                    day=true;
                }
            })
            
            if(classAll || classSpecific==course.level){
                if(genderAll || genderSpecific==course.tutor.id.gender){
                    if(course.price>=lowerPrice && course.price<=upperPrice && loc && day){
                        temp.push(<Course 
                        key={course._id}
                        id={course._id}
                        name={course.name}
                        desc={course.desc}
                        rating={course.rating}
                        price={course.price}
                        level={course.level}
                        location={course.location}
                        tutorname={course.tutor.name}
                        pic={pic}
                        />);
                    }
                }
            }
        });
        
        return(<div className='course-list'>
                    {temp}
                </div>);
    }
}

class Course extends React.Component{
    constructor(props){
        super(props);
        this.state={};
    }
    courseClick(){
        window.location='/course/'+this.props.id;
    }
    render(){
        var rating = [];
        for(let i=0;i<this.props.rating;i++){
            rating.push(<Star key={i}/>);
        }
        
        
        var locationMap={
            'bts':'BTS Station',
            'mrt':'MRT Station',
            'siam':'Siam',
            'silom':'Silom',
            'home':'Home Tutor'
            };
        
        var loc = [];
        for(let i =0;i<this.props.location.length;i++){
            if(i>0){
                loc.push(', '+locationMap[this.props.location[i]]);
            }else{
                loc.push(locationMap[this.props.location[i]]);
            }
        }
        
        return(<div className="panel panel-default browse" onClick={this.courseClick.bind(this)}>
                    <div className="panel-body">
                        <div className='row'>
                                <div className='col-md-3'>
                                    <img src={this.props.pic} className='img-responsive img-circle' />
                                </div>
                                <div className='col-md-9'>
                                    <h3>{this.props.name}</h3>
                                    <p>
                                    {this.props.desc}
                                    </p>
                                    <div className="panel panel-default">
                                        <div className="panel-body">
                                            <div className='col-md-3 col-sm-6'><strong>Rating:</strong><br />
                                                {rating}
                                            </div>
                                            <div className='col-md-3 col-sm-6'><strong>Price:</strong><br />{this.props.price} Baht/hr</div>
                                            <div className='col-md-3 col-sm-6'><strong>Class:</strong><br />{this.props.level}</div>
                                            <div className='col-md-3 col-sm-6'><strong>Location:</strong><br />{loc}</div>
                                        </div>
                                    </div>
                                </div>
                        </div>
                    </div>
                </div>);
    }
}

class Star extends React.Component{
    render(){
        return (<span className="glyphicon glyphicon-star browse-star" aria-hidden="true"></span>);
    }
}

ReactDOM.render(<Main subject='<%= subject %>' /> ,document.querySelector('#browse'));
</script>
<% include ../partials/footer %>